{"version":3,"file":"speech-input.webchat-plugin.legacy.js","mappings":"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","sources":["webpack://@cognigy/webchat/./alias/react.js","webpack://@cognigy/webchat/./src/plugins/speech-input/baseline-keyboard_voice-24px.svg","webpack://@cognigy/webchat/./src/plugins/speech-input/baseline-mic-24px.svg","webpack://@cognigy/webchat/./src/plugins/speech-input/baseline-mic_none-24px.svg","webpack://@cognigy/webchat/./src/plugins/speech-input/baseline-mic_off-24px.svg","webpack://@cognigy/webchat/webpack/bootstrap","webpack://@cognigy/webchat/./src/plugins/speech-input/SpeechInput.tsx","webpack://@cognigy/webchat/./src/plugins/helper.tsx","webpack://@cognigy/webchat/./src/plugins/speech-input/index.tsx"],"sourcesContent":["if (!window.__COGNIGY_WEBCHAT)\n    throw new Error('Cognigy Webchat v2.7 or higher has to be loaded before this plugin');\n\nmodule.exports = window.__COGNIGY_WEBCHAT.React;","var React = require('react');\n\nfunction BaselineKeyboardVoice24px (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M12 15c1.66 0 2.99-1.34 2.99-3L15 6c0-1.66-1.34-3-3-3S9 4.34 9 6v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 15 6.7 12H5c0 3.42 2.72 6.23 6 6.72V22h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0 0h24v24H0z\",\"fill\":\"none\",\"key\":1})]);\n}\n\nBaselineKeyboardVoice24px.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\"};\n\nmodule.exports = BaselineKeyboardVoice24px;\n\nBaselineKeyboardVoice24px.default = BaselineKeyboardVoice24px;\n","var React = require('react');\n\nfunction BaselineMic24px (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0 0h24v24H0z\",\"fill\":\"none\",\"key\":1})]);\n}\n\nBaselineMic24px.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\"};\n\nmodule.exports = BaselineMic24px;\n\nBaselineMic24px.default = BaselineMic24px;\n","var React = require('react');\n\nfunction BaselineMicNone24px (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1.2-9.1c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2l-.01 6.2c0 .66-.53 1.2-1.19 1.2-.66 0-1.2-.54-1.2-1.2V4.9zm6.5 6.1c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0 0h24v24H0z\",\"fill\":\"none\",\"key\":1})]);\n}\n\nBaselineMicNone24px.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\"};\n\nmodule.exports = BaselineMicNone24px;\n\nBaselineMicNone24px.default = BaselineMicNone24px;\n","var React = require('react');\n\nfunction BaselineMicOff24px (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h24v24H0zm0 0h24v24H0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z\",\"key\":1})]);\n}\n\nBaselineMicOff24px.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\"};\n\nmodule.exports = BaselineMicOff24px;\n\nBaselineMicOff24px.default = BaselineMicOff24px;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { InputComponentProps, InputPluginFactoryProps } from '../../common/interfaces/input-plugin';\ninterface ISpeechInputState {\n    speechRecognition: SpeechRecognition;\n    active: boolean;\n    result: string;\n    isFinalResult: boolean;\n}\n\nconst getSpeechRecognition = (): SpeechRecognition | null => {\n    try {\n        return new SpeechRecognition();\n    } catch (e) { }\n\n    try {\n        // @ts-ignore\n        return new webkitSpeechRecognition() as SpeechRecognition;\n    } catch (e) { }\n\n    return null;\n}\n\nexport const getSpeechInput = ({ React, styled }: InputPluginFactoryProps) => {\n    const MicIcon = require('./baseline-mic-24px.svg');\n    const MicOffIcon = require('./baseline-mic_off-24px.svg');\n    const MicNoneIcon = require('./baseline-mic_none-24px.svg');\n\n    const Wrapper = styled.form(({ theme }) => ({\n        display: 'block',\n        position: 'relative',\n        margin: 0,\n\n        backgroundColor: 'white',\n\n        borderBottomLeftRadius: theme.unitSize * 2,\n        borderBottomRightRadius: theme.unitSize * 2,\n\n        borderBottomColor: 'transparent',\n        borderBottomStyle: 'solid',\n        borderBottomWidth: 2,\n\n        transition: 'border-bottom .2s ease-out',\n\n        '&.active': {\n            borderBottomColor: theme.primaryColor\n        }\n    }));\n\n    const Input = styled.input(({ theme }) => ({\n\n        display: 'block',\n        height: theme.blockSize * 1.5,\n        border: 'none',\n        width: '100%',\n        boxSizing: 'border-box',\n        paddingLeft: theme.unitSize * 3,\n        paddingRight: theme.unitSize * 9,\n        outline: 'none',\n        backgroundColor: 'transparent',\n\n        '&.interim': {\n            fontStyle: 'italic'\n        }\n    }));\n\n    const Button = styled.button(({ theme }) => ({\n        display: 'block',\n        width: theme.unitSize * 5,\n        height: theme.unitSize * 5,\n\n        position: 'absolute',\n        right: '50%',\n        top: '50%',\n        marginTop: - theme.unitSize * 5 / 2,\n        marginRight: - theme.unitSize * 5 / 2,\n        backgroundColor: 'transparent',\n        border: 'none',\n        fill: 'hsla(0, 0%, 0%, .54)',\n        cursor: 'pointer',\n        transition: 'right .2s ease-out',\n\n        '&.right': {\n            right: theme.unitSize * (3 + 5 / 2),\n        },\n\n        '&[disabled]': {\n            fill: 'hsla(0, 0%, 0%, .2)',\n            cursor: 'default'\n        }\n    }))\n\n\n\n    return class SpeechInput extends React.Component<InputComponentProps, ISpeechInputState> {\n        constructor(props: InputComponentProps) {\n            super(props);\n\n            const speechRecognition = getSpeechRecognition();\n\n            if (speechRecognition) {\n                speechRecognition.continuous = true;\n                speechRecognition.interimResults = true;\n                speechRecognition.onresult = this.handleResult;\n\n                if (props.config.settings.STTLanguage) {\n                    speechRecognition.lang = props.config.settings.STTLanguage\n                }\n            }\n\n            this.state = {\n                // @ts-ignore\n                speechRecognition,\n                active: false,\n                result: '',\n                isFinalResult: false\n            } as ISpeechInputState;\n        }\n\n        componentDidUpdate() {\n            if (this.state.speechRecognition && this.props.config.settings.STTLanguage) {\n                this.state.speechRecognition.lang = this.props.config.settings.STTLanguage\n            }\n        }\n\n        handleResult = (e: SpeechRecognitionEvent) => {\n            const result = e.results[e.resultIndex];\n            const { isFinal } = result;\n            const { transcript } = result[0];\n\n            this.setState({\n                result: transcript,\n                isFinalResult: isFinal\n            })\n\n            // only send messages that are not 'interim'\n            if (isFinal) {\n                this.props.onSendMessage(transcript);\n            }\n        }\n\n        isSupported() {\n            return !!this.state.speechRecognition;\n        }\n\n        toggle = () => {\n            const { active, speechRecognition } = this.state;\n\n            if (active) {\n                speechRecognition.stop();\n            } else {\n                speechRecognition.start();\n            }\n\n            const newState: Partial<ISpeechInputState> = {\n                active: !active,\n            }\n\n            if (active) {\n                newState.result = '',\n                newState.isFinalResult = false;\n            }\n\n            this.setState(newState as ISpeechInputState);\n        }\n\n        renderMicIcon() {\n            if (!this.isSupported())\n                return <MicNoneIcon />;\n\n            if (this.state.active)\n                return <MicOffIcon />;\n\n            return <MicIcon />\n        }\n\n        render() {\n            const { result, isFinalResult, active } = this.state;\n\n            const buttonClasses = [\n                active && 'right'\n            ]\n                .filter(name => typeof name === 'string')\n                .join(' ');\n\n            const inputClasses = [\n                !isFinalResult && 'interim'\n            ]\n                .filter(name => typeof name === 'string')\n                .join(' ');\n\n            const wrapperClasses = [\n                active && 'active'\n            ]\n                .filter(name => typeof name === 'string')\n                .join(' ');\n\n            return (\n                <Wrapper className={wrapperClasses}>\n                    <Input\n                        className={inputClasses}\n                        disabled\n                        value={result}\n                    />\n                    <Button\n                        className={buttonClasses}\n                        disabled={!this.isSupported()}\n                        onClick={this.toggle}\n                        type=\"button\"\n                    >\n                        {this.renderMicIcon()}\n                    </Button>\n                </Wrapper>\n            )\n        }\n    }\n}\n","import { MessagePlugin, MessageComponent, MessagePluginOptions, MessageMatcher, MessagePluginFactory, MessagePluginFactoryProps } from \"../common/interfaces/message-plugin\";\nimport { InputPlugin, InputPluginFactory } from \"../common/interfaces/input-plugin\";\nimport { IMessage } from \"../common/interfaces/message\";\nimport { IWebchatConfig } from \"../common/interfaces/webchat-config\";\n\nconst createStringMatcher = (name: string): MessageMatcher => message => message.data\n    && message.data._plugin\n    && message.data._plugin.type === name;\n\ntype MessagePluginCreator = (match: MessageMatcher | string, component: MessageComponent, options?: Partial<MessagePluginOptions>) => MessagePlugin;\nexport const createMessagePlugin: MessagePluginCreator = (match, component, options = {}): MessagePlugin => {\n    if (typeof match === 'string')\n        match = createStringMatcher(match);\n\n    const plugin: MessagePlugin = {\n        match,\n        component,\n        options\n    }\n\n    return plugin;\n};\n\nexport const registerMessagePlugin = (plugin: MessagePlugin | MessagePluginFactory) => {\n    if (window) {\n        // @ts-ignore\n        window.cognigyWebchatMessagePlugins = [...(window.cognigyWebchatMessagePlugins || []), plugin];\n        console.log('added cognigy message plugin');\n    }\n}\n\nexport const getRegisteredMessagePlugins = (): (MessagePlugin | MessagePluginFactory)[] => \n    // @ts-ignore\n    window.cognigyWebchatMessagePlugins || [];\n\nexport const prepareMessagePlugins = (messagePlugins = getRegisteredMessagePlugins(), {\n    React,\n    styled\n}): MessagePlugin[] => messagePlugins\n    .map(plugin => typeof plugin === 'function'\n        ? plugin({ React, styled })\n        : plugin\n    )\n    .map(plugin => typeof plugin.match === 'string'\n        ? { ...plugin, match: ({ data }) => data && data._plugin && data._plugin.type === plugin.match }\n        : plugin\n    );\n\n\n\n\n// type InputPluginCreator = (match: InputRule | string, component: InputComponent, options?: Partial<InputPluginOptions>) => InputPlugin;\n// export const createInputPlugin: InputPluginCreator = (match, component, options = {}) => {\n//     const plugin = {\n//         match,\n//         component,\n//         options\n//     }\n\n//     return plugin;\n// };\n\nexport const registerInputPlugin = (plugin: InputPlugin | InputPluginFactory) => {\n    if (window) {\n        // @ts-ignore\n        window.cognigyWebchatInputPlugins = [...(window.cognigyWebchatInputPlugins || []), plugin];\n        console.log('added cognigy input plugin');\n    }\n}\n\nexport const getPluginsForMessage = (plugins: MessagePlugin[], config: IWebchatConfig) => (message: IMessage): MessagePlugin[] => {\n    let matchedPlugins: MessagePlugin[] = [];\n    \n    for (const plugin of plugins) {\n        const isMatch = (plugin.match as MessageMatcher)(message, config);\n\n        if (isMatch) {\n            matchedPlugins.push(plugin);\n\n            if (!plugin.options || !plugin.options.passthrough)\n                break;\n        }\n    }\n\n    return matchedPlugins;\n}\n\nexport const isFullscreenPlugin = (plugin: MessagePlugin) => plugin.options && plugin.options.fullscreen;","import { registerInputPlugin } from \"../helper\";\nimport { getSpeechInput } from \"./SpeechInput\";\nimport { InputPlugin, InputPluginFactory } from \"../../common/interfaces/input-plugin\";\nimport Button from \"./Button\";\n\nconst speechInput: InputPluginFactory = ({ React, styled }) => {\n    const icon = require('./baseline-keyboard_voice-24px.svg');\n\n    const Input = getSpeechInput({ React, styled })\n\n    return {\n        type: 'select',\n        id: 'speech',\n        component: Input,\n        icon\n    }\n}\n\nregisterInputPlugin(speechInput);\n\nexport default speechInput"],"names":["window","__COGNIGY_WEBCHAT","Error","module","exports","React","BaselineKeyboardVoice24px","props","createElement","defaultProps","default","BaselineMic24px","BaselineMicNone24px","BaselineMicOff24px","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","plugin","getSpeechInput","styled","MicIcon","require","MicOffIcon","MicNoneIcon","Wrapper","form","theme","display","position","margin","backgroundColor","borderBottomLeftRadius","unitSize","borderBottomRightRadius","borderBottomColor","borderBottomStyle","borderBottomWidth","transition","primaryColor","Input","input","height","blockSize","border","width","boxSizing","paddingLeft","paddingRight","outline","fontStyle","Button","button","right","top","marginTop","marginRight","fill","cursor","e","result","results","resultIndex","isFinal","transcript","setState","isFinalResult","onSendMessage","state","active","speechRecognition","stop","start","newState","SpeechRecognition","webkitSpeechRecognition","getSpeechRecognition","continuous","interimResults","onresult","handleResult","config","settings","STTLanguage","lang","this","isSupported","buttonClasses","filter","name","join","inputClasses","wrapperClasses","className","disabled","value","onClick","toggle","type","renderMicIcon","Component","speechInput","icon","id","component","cognigyWebchatInputPlugins","console","log"],"sourceRoot":""}